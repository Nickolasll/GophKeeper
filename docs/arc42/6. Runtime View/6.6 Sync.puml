@startuml
!theme vibrant
title: 6.6. Синхронизация данных клиента и сервера
skinparam maxMessageSize 300
autonumber

participant "Пользователь" as user
box "Компьютер пользователя" #DEDEDE
    participant "CLI Клиент" as client
    participant "Сервис шифрования" as cli_crypto
    database "Файловая система" as file
end box

box "GophKeeper" #d3f3fa
    participant "Обработчик запроса" as handler
    participant "Юзкейз синхронизации" as usecase
    participant "Служба шифрования" as crypto
    database "postgres" as db
end box

user -> client ++ : Вызов команды авторизации или принудительной синхронизации

|||
ref over user, file
    6.5. Авторизация пользователя на стороне клиента
end
|||

client -> handler ++ : Отправляет запрос на синхронизацию данных
note over client, handler
    GET /api/v1/all HTTP/2.0

    Authorization: Bearer ...
end note

|||
ref over user, handler
    6.4. Авторизация пользователя на стороне сервера
end
|||

handler -> usecase ++ : Вызывает поведение по получению всех данных по идентификатору пользователя
usecase -> db ++ : Запрашивает данные пользователя
return Пользовательские данные
loop Итерируется по пользовательским данным
    usecase -> crypto ++ : Расшифровывает данные
    return Расшифрованные данные
end
return Пользовательские данные
return 200 OK
note over client, handler
    200 OK HTTP/2.0
    Content-Type: application/json
    
    
    {
        "credentials": [
             {
                 "id": "uuid",
                 "name": "name",
                 "login": "login",
                 "password": "password
             }
        ],
        "texts": [
             {
                 "id": "uuid",
                 "content": "text"
             },
        ],
        ...
    }
end note

client -> cli_crypto ++ : Шифрует публичный ключ
return зашифрованные данные
client -> file: Сохраняет зашифрованные данные в файл
activate file
deactivate file 
return Вывод сообщения об успехе исполнения команды
@enduml