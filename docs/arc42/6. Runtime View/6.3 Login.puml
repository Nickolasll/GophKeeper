@startuml
!theme vibrant
title: 6.3. Вход по логину и паролю
skinparam maxMessageSize 300
autonumber

participant "Пользователь" as user
box "Компьютер пользователя" #DEDEDE
    participant "CLI Клиент" as client
    database "Файловая система" as file
end box

box "GophKeeper" #d3f3fa
    participant "Обработчик запроса" as handler
    participant "Юзкейз регистрации" as auth
    participant "Служба JavaScript Object Signing and Encryption" as jose
    database "postgres" as db
end box

user -> client ++ : Вводит команду на вход по логину и паролю
note over user, client
    GophKeeper login my@login.com password   
end note

client -> client: валидирует данные из команды

opt Формат некорректен
    client --> user: Вывод сообщения об ошибке
end

client -> handler ++ : Отправляет запрос на вход по логину и паролю
note over client, handler
    POST /api/user/login HTTP/1.1
    Content-Type: application/json

    login: login
    password: password   
end note

handler -> handler : Парсит JSON и валидирует формат входных данных из тела запроса
opt Формат некорректен
    handler --> client: HTTP 400 bad request
    client --> user: Вывод сообщения об ошибке
end

handler -> auth ++ : Вызывает поведение входа по логину и паролю
auth -> db ++ : Поиск пользователя по логину
return Результат запроса
auth -> auth: Проверка результата запроса
opt Результат запроса = null
    auth --> handler: Пользователь не найден
    handler --> client: HTTP 401 Unauthorized
    client --> user: Вывод сообщения об ошибке
end

auth -> jose ++: Проверка пароля на соответствие
return результат проверки
opt Неправильный пароль
    auth --> handler: Неправильный пароль
    handler --> client: HTTP 401 Unauthorized
    client --> user: Вывод сообщения об ошибке
end
    
auth -> jose ++: Генерация JWT с уникальным идентификатором пользователя
return JWT
return JWT

handler -> handler: Устанавливает JWT в HTTP-заголовок Authorization
return HTTP 200 Ok
note over client, handler
    200 OK HTTP/1.1
    Authorization: Bearer ...  
end note
client -> file: Сохраняет JWT в файл и шифрует его
activate file
deactivate file 
return Вывод сообщения об успехе исполнения команды
@enduml